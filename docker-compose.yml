services:
  # API Service
  api:
    build:
      context: .
      dockerfile: docker/autoglean/Dockerfile.api
      target: development
    container_name: autoglean-api
    command: uvicorn autoglean.api.main:app --host ${API_HOST} --port ${API_PORT} --reload
    volumes:
      - ./autoglean:/app/autoglean
      - ./config:/app/config
      - ./storage:/app/storage
      - ./logs:/app/logs
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - APP_ENV=${APP_ENV}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - LLM_MOCK_MODE=${LLM_MOCK_MODE}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-autoglean}:${POSTGRES_PASSWORD:-autoglean_dev_password}@postgres:5432/${POSTGRES_DB:-autoglean}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - autoglean-network

  # Celery Worker
  worker:
    build:
      context: .
      dockerfile: docker/autoglean/Dockerfile.api
      target: development
    container_name: autoglean-worker
    command: celery -A autoglean.api.celery_app worker --loglevel=${CELERY_LOG_LEVEL} --concurrency=${CELERY_WORKER_CONCURRENCY}
    volumes:
      - ./autoglean:/app/autoglean
      - ./config:/app/config
      - ./storage:/app/storage
      - ./logs:/app/logs
    environment:
      - APP_ENV=${APP_ENV}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - LLM_MOCK_MODE=${LLM_MOCK_MODE}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-autoglean}:${POSTGRES_PASSWORD:-autoglean_dev_password}@postgres:5432/${POSTGRES_DB:-autoglean}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - autoglean-network

  # PostgreSQL Database
  postgres:
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile.postgres
    container_name: autoglean-postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-autoglean}
      - POSTGRES_USER=${POSTGRES_USER:-autoglean}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-autoglean_dev_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-autoglean}"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - autoglean-network

  # Redis (Message Broker & Result Backend for Celery)
  redis:
    image: redis:alpine
    container_name: autoglean-redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - autoglean-network

  # UI (React + Vite)
  ui:
    build:
      context: ./ui
      dockerfile: ../docker/ui/Dockerfile.ui
    container_name: autoglean-ui
    volumes:
      - ./ui:/app
      - /app/node_modules
    ports:
      - "${UI_PORT}:8080"
    environment:
      - VITE_API_URL=http://localhost:${API_PORT}
    depends_on:
      - api
    networks:
      - autoglean-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  autoglean-network:
    driver: bridge
